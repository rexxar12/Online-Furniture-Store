package com.example.demo.controllers;

import java.io.IOException;
import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.entities.Product;
import com.example.demo.entities.Seller;
import com.example.demo.services.ProductService;

@CrossOrigin
@RestController
@RequestMapping("/products")
public class ProductController {
 
    @Autowired
    private ProductService productService;
 
    @PostMapping("/create")
    public ResponseEntity<Product> createProduct(@RequestParam("name") String name,
                                                  @RequestParam("description") String description,
                                                  @RequestParam("price") double price,
                                                  @RequestParam("image") MultipartFile image,
                                                  @RequestParam("sellerId") int sellerId) throws IOException {
        Seller seller = new Seller();
        seller.setSid(sellerId);
 
        Product product = new Product();
        product.setName(name);
        product.setDescription(description);
        product.setPrice(price);
        product.setImage(image.getBytes());
        product.setSeller(seller);
 
        Product savedProduct = productService.createProduct(product);
 
        return ResponseEntity.created(URI.create("/products/" + savedProduct.getPid())).body(savedProduct);
    }
 
    @GetMapping("/seller/{sellerId}")
    public List<Product> getProductsBySeller(@PathVariable int sellerId) {
        Seller seller = new Seller();
        seller.setSid(sellerId);
 
        return productService.getProductsBySeller(seller);
    }
 
   
}