package com.example.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Order;
import com.example.demo.repository.OrderRepository;
import com.example.demo.services.OrderService;

@RestController
@RequestMapping("/api/orders")
@CrossOrigin(origins = "http://localhost:3000")
public class OrderController {
	@Autowired
	private OrderService orderService;
	
	@Autowired
	private OrderRepository orderRepository;
	@Autowired
	private 

	@GetMapping("/0/{cid}")
	public ResponseEntity<List<Order>> getOrdersByCustomerIdAndStatus(@PathVariable("cid") int cid) {
		List<Order> orders = orderRepository.findByCidAndStatus(cid, 0);
		return ResponseEntity.ok().body(orders);
	}
	
	
	@GetMapping("/seller/{sellerId}/orders")
	public List<Order> getOrdersBySeller(@PathVariable int sellerId) {
	List<Product> products = productService.getProductsBySellerId(sellerId);
	List<Integer> productIds = products.stream().map(Product::getId).collect(Collectors.toList());
	return orderService.getOrdersByProductIds(productIds);
	}


	
	@PutMapping("/seller/{sellerId}/product/{productId}/order/{orderId}/status")
	public Order updateOrderStatus(@PathVariable int sellerId, @PathVariable int productId, @PathVariable int orderId, @RequestParam int status) {
	Order order = orderRepository.getById(orderId);
	if (order != null && order.getSellerId() == sellerId && order.getProductId() == productId) {
	order.setStatus(status);
	orderService.saveOrder(order);
	}
	return order;
	}
	
}
