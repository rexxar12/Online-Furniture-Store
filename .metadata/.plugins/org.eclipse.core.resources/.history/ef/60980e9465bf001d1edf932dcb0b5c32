package com.example.demo.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.CartDTO;
import com.example.demo.entities.Cart;
import com.example.demo.entities.Customer;
import com.example.demo.entities.Product;
import com.example.demo.repository.CartRepository;
import com.example.demo.repository.CustomerRepository;
import com.example.demo.repository.ProductRepository;
import com.example.demo.services.CartService;


@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/cart")
public class CartController {
	@Autowired
	private CartRepository cartRepository;
    @Autowired
    private CustomerRepository customerRepository;
    @Autowired
    private ProductRepository productRepository;
    

    @GetMapping("/{cid}")
    public ResponseEntity<List<Cart>> getCartsByCustomerId(@PathVariable("cid") int cid) {
        List<Cart> carts = cartService.getCartsByCustomerId(cid);
        return new ResponseEntity<>(carts, HttpStatus.OK);
    }

    @GetMapping("/{cid}/{productId}")
    public ResponseEntity<Cart> getCartByCustomerIdAndProductId(
            @PathVariable("cid") int cid,
            @PathVariable("product_name") String product_name) {
        
    	Product p= productRepository.findByName(product_name);
    	
    	Optional<Cart> optionalCart = cartService.getCartByCustomerIdAndProductId(cid, p.getPid());
        if (optionalCart.isPresent()) {
            Cart cart = optionalCart.get();
            return new ResponseEntity<>(cart, HttpStatus.OK);
        } else {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
    }

    @PostMapping
    public ResponseEntity<Cart> addProductToCart(@RequestBody CartDTO cart) {
    	Cart c=new Cart();
    	Customer cust= customerRepository.findByCid(cart.getCid());
    	Product p= productRepository.findByName(cart.getProduct_name());
    	c.setCustomer(cust);
    	c.setProduct(p);
    	cartRepository.save(c);        
        return new ResponseEntity<>(HttpStatus.CREATED);
    }
}
