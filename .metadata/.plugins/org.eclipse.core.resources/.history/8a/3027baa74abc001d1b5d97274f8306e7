package com.example.demo.services;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entities.Product;
import com.example.demo.entities.Seller;
import com.example.demo.repository.ProductRepository;
import com.example.demo.repository.SellerRepository;



@Service
public class ProductService {
    private final ProductRepository productRepository;
    private final SellerRepository sellerRepository;

    public ProductService(ProductRepository productRepository, SellerRepository sellerRepository) {
        this.productRepository = productRepository;
        this.sellerRepository = sellerRepository;
    }

    public Product addProduct(Product product, int sellerId) {
        Seller seller = sellerRepository.findById(sellerId).orElseThrow(() -> new RuntimeException("Seller not found"));

        product.setSeller(seller);

        return productRepository.save(product);
    }
    
    public boolean isDuplicateProduct(Product product, int sellerId) {
        // Check if a product with the same name and description already exists for the given seller
        List<Product> existingProducts = productRepository.findBySellerId(sellerId);
        for (Product existingProduct : existingProducts) {
            if (existingProduct.getPname().equals(product.getPname()) && existingProduct.getDescription().equals(product.getDescription())) {
                return true;
            }
        }
        return false;
    }
    
    
}

