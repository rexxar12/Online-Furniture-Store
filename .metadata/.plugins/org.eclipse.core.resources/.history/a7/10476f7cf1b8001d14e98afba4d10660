package com.example.demo.controllers;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Register;
import com.example.demo.entities.User;
	
import com.example.demo.repository.UserRepository;
import com.example.demo.services.UserService;


@RestController
@RequestMapping("/api")
@CrossOrigin(origins = "http://localhost:3000")
public class UserController {
    @Autowired
    private UserService userService;
    
    @PostMapping("/login")
    public ResponseEntity<String> login(@RequestBody Map<String, String> loginDetails) {
        String userId = loginDetails.get("userId");
        String password = loginDetails.get("password");

        if (userService.authenticate(userId, password)) {
            int userRole = userService.getUserRole(userId, password);
            if (userRole == 1) {
                return ResponseEntity.ok("admin");
            } 
            else if (userRole==2) {
            	return ResponseEntity.ok("seller");
            }
            else if (userRole==3) {
            	return ResponseEntity.ok("carpenter");
            }
            else  {
                return ResponseEntity.ok("customer");
            }
        } else {
            return ResponseEntity.badRequest().body("Invalid login details");
        }
    }
    
    @Autowired
    private UserRepository userRepository;

    @PostMapping("/registration")
    public String registrationSubmit(@ModelAttribute Register registration) {
        // check if email or userId is already registered
        if (userRepository.findByEmail(registration.getEmail()).isPresent() || userRepository.findByUserId(registration.getUser_id()).isPresent()) {
            // handle error
            return "redirect:/registration-error";
        }
        
        // create new user object and set properties
        User user = new User();
        user.setUserId(registration.getUser_id());
        user.setEmail(registration.getEmail());
        user.setPassword(registration.getPassword());
        user.setRole(registration.getRole());
        user.setFname(registration.getFname());
        user.setLname(registration.getLname());
        user.setGst(registration.getGst());
        user.setCity(registration.getCity());
        user.setState(registration.getState());
        
        // save user object
        userRepository.save(user);
        
        // redirect to success page
        if (registration.getRole()==4) {
            return "redirect:/customer-success";
        } else if (registration.getRole()==3) {
            return "redirect:/carpenter-success";
        } 
        else if(registration.getRole()==2) {
        	return "redirect:/seller-success";
        }
        else if(registration.getRole()==1) {
        	return "redirect:/admin-success";
        }
        else {
            return "redirect:/registration-error";
        }
    }

    
    

}


   


